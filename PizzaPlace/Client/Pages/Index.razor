@page "/"

<PageTitle>Index</PageTitle>

<h1>- Our selection of pizzas -</h1>

<!--MENU-->
@foreach (var pizza in State.Menu.Pizzas)
{
    <div class="row">
    <div class="col">
        @pizza.Name
    </div>
    <div class="col text-right">
        @($"{pizza.Price:0.00}")
    </div>
    <div class="col"></div>
    <div class="col">
        <img src="@SpicinessImage(pizza.Spiciness)" alt="@pizza.Spiciness" style="height:40px; width:40px;" />
    </div>
    <div class="col">
        <button class="btn btn-success pl-4 pr-4" @onclick="@(() => AddToBasket(pizza))"> Add </button>
    </div>
</div>
}
<!--END MENU-->
<!--Shopping basket-->
@if (State.Basket.Orders.Any())
{
    <h1 class="mt-5">- Your current order -</h1>

    @foreach (var (pizza, pos) in State.Basket.Orders.Select((id, pos) => (State.Menu.GetPizza(id), pos)))
    {
        <div class="row mb-2">
    <div class="col">
        @pizza!.Name
    </div>
    <div class="col text-right">
        @($"{pizza.Price:0.00}")
    </div>
    <div class="col"></div>
    <div class="col">
        <button class="btn btn-danger" @onclick="@(() => RemoveFromBasket(pos))">
            Remove
        </button>
    </div>
</div>
    }

    <div class="row">
        <div class="col"></div>
        <div class="col">
            <hr />
        </div>
        <div class="col"> </div>
        <div class="col"> </div>
    </div>

    <div class="row">
    <div class="col"><strong>Total:</strong></div>
    <div class="col text-right font-weight-bold">
        <strong>
            @($"{State.TotalPrice:0.00}")
        </strong>
    </div>
    <div class="col"> </div>
    <div class="col"> </div>
    <div class="col"> </div>
</div>
}
<!--End Shopping basket-->

<!--Customer entry-->
<h1>Please, enter your details below</h1>

<EditForm Model="@State.Basket.Customer" OnValidSubmit="PlaceOrder">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset>
        <div class="row mb-2">
            <label for="name" class="col-2">Name:</label>
            <InputText class="form-control col-6" @bind-Value="@State.Basket.Customer.Name" />
        </div>
        <div class="row mb-2">
            <div class="col-6">
                <ValidationMessage For="@(() => State.Basket.Customer.Name)" />
            </div>
        </div>

        <div class="row mb-2">
            <label for="street" class="col-2">Street:</label>
            <InputText class="form-control col-6" @bind-Value="@State.Basket.Customer.Street" />
        </div>
        <div class="row mb-2">
            <div class="col-6">
                <ValidationMessage For="@(() => State.Basket.Customer.Street)" />
            </div>
        </div>

        <div class="row mb-2">
            <label for="city" class="col-2">City:</label>
            <InputText class="form-control col-6" @bind-Value="@State.Basket.Customer.City" />
        </div>
        <div class="row mb-2">
            <div class="col-6">
                <ValidationMessage For="@(() => State.Basket.Customer.City)" />
            </div>
        </div>

        <button class="btn btn-secondary">Checkout</button>
    </fieldset>
</EditForm>
<!--End Customer entry-->

@State.ToJson();

@code {
    private State State { get; } = new State();

    protected override void OnInitialized()
    {
        State.Menu.Add(new Pizza(1, "Pepperoni", 8.99M, Spiciness.Spicy));
        State.Menu.Add(new Pizza(2, "Margarita", 7.99M, Spiciness.None));
        State.Menu.Add(new Pizza(3, "Diabolo", 9.99M, Spiciness.Hot));
        State.Menu.Add(new Pizza(4, "Fromagge", 12.50M, Spiciness.None));

    }

    // Ruta para las imagenes de los picantes
    private string SpicinessImage(Spiciness spiciness) => $"images/{spiciness.ToString().ToLower()}.png";

    // Aniadir al carrito
    private void AddToBasket(Pizza pizza) => State.Basket.Add(pizza.Id);

    // Eliminar del carrito
    private void RemoveFromBasket(int pos) => State.Basket.RemoveAt(pos);

    // Agregar pedido
    private void PlaceOrder() => Console.WriteLine("Placing order... :)");

}
